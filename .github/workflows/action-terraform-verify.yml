name: Terraform Validation

on:
  pull_request:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate Terraform Files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Fetch Changed Files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"

      - name: Configure Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      # ✅ Step 1: Check Terraform Formatting and Fail on Errors
      - name: Run Terraform Format Check
        run: |
          set -e  # Ensure script exits on the first failure
          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            if [[ $changed_file == *.tf ]]; then
              echo "Checking terraform fmt on ${changed_file}..."
              terraform fmt -check $changed_file || exit 1
            fi
          done

      # ✅ Step 2: Validate Terraform Syntax (Detects Syntax Errors)
      - name: Run Terraform Validation
        run: |
          set -e  # Ensure script exits on the first failure
          terraform init -backend=false
          terraform validate
