name: Terraform Verification

on:
  pull_request:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: read

jobs:
  validate_formatting:
    runs-on: ubuntu-latest
    name: Validate Terraform Formatting
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Fetch Changed Files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "space-delimited"

      - name: Configure Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Debug Terraform File Detection
        run: |
          echo "🔍 Listing all Terraform (.tf) files in repository:"
          find . -name "*.tf"
          echo "----------------------------------"
          echo "🔍 Checking which files are detected as changed:"
          echo "${{ steps.pr_files.outputs.added_modified }}"
          echo "----------------------------------"

      - name: Run Terraform Format Check
        run: |
          echo "🚀 Running Terraform fmt -check on modified files..."
          CHECK_FAILED=0

          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            echo "🔎 Checking file: $changed_file"

            if [[ -f "$changed_file" && $changed_file == *.tf ]]; then
              terraform fmt -check "$changed_file" || CHECK_FAILED=1
            else
              echo "⚠️ Skipping non-existent or non-Terraform file: $changed_file"
            fi
          done

          if [[ $CHECK_FAILED -ne 0 ]]; then
            echo "❌ Terraform formatting check failed!" | tee -a $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ All Terraform files are properly formatted."
          fi

  validate_syntax:
    runs-on: ubuntu-latest
    name: Validate Terraform Script
    needs: validate_formatting  # Ensures formatting check passes first
    steps:
      - uses: actions/checkout@v3

      - name: Configure Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Initialize Terraform
        run: |
          echo "🚀 Running terraform init"
          terraform init -backend=false

      - name: Run Terraform Validation
        run: |
          echo "🚀 Running terraform validate"
          terraform validate || (echo "❌ Terraform validation failed!" | tee -a $GITHUB_STEP_SUMMARY && exit 1)
